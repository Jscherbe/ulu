////
/// @group element
////

@use "sass:meta";
@use "color";
@use "utils";

/// Backdrop blur amount used on elements/components
/// @type Number

$backdrop-blur: 4px !default;     

/// Box-shadow definition for elements that are on top of page 
/// @type Number

$box-shadow: 0 1px 5px color.get('box-shadow') !default;

/// Box-shadow definition for elements that are raised off of the page (dropdowns, etc)

$box-shadow--raised: 0 1px 12px color.get('box-shadow') !default;

/// Box-shadow definition for elements that are above the page (fixed items, etc)

$box-shadow--above: 0 1px 20px color.get('box-shadow') !default;

/// Common element border radius

$border-radius: 8px !default;

/// Common element border radius (small)

$border-radius--small: 3px !default;

/// Common element border radius (large)

$border-radius--large: 5% !default;

$rule--size: 1px !default;
$rule--style: solid !default;

/// Border definition for elements that use a rule (divider), 
/// to change color set it in color module's palette

$rule: $rule--size $rule--style color.get('rule') !default;

/// Border definition for elements that use a light weight rule (divider), 
/// to change color set it in color module's palette

$rule-light: $rule--size $rule--style color.get('rule-light') !default;

$rule-styles: (
  "base" : $rule,
  "light" : $rule-light,
) !default;

$rule-margins: (
  "small" : 1rem,
  "medium" : 3rem,
  "large" : 5rem
) !default;

@mixin set-rule-styles($changes) {
  $rule-styles: map.merge($rule-styles, $changes) !global;
}
@mixin set-rule-margins($changes) {
  $rule-margins: map.merge($rule-margins, $changes) !global;
}
@function get-rule-style($name) {
  @return utils.require-map-get($rule-styles, $name, "element [rule style]");
}
@function get-rule-margin($name) {
  @return utils.require-map-get($rule-margins, $name, "element [rule style]");
}
@mixin rule(
  $style-name: null, 
  $margin-name: null
) {
  $style: if($style, get-rule-style($style-name), $rule);
  $margin: if($style, get-rule-margin($margins-name), $margin);
  border-bottom: $style;
  margin-#{ $position }: $margin;
  margin-#{ $position }: $margin;
}



/// Common element margin (small)

$margin-small: 0.65em !default;

/// Common element margin

$margin: 1em !default;

/// Common element margin (large)

$margin-large: 2em !default;

/// Ordered list type (level 1)

$ol-list-style-type: decimal !default;

/// Ordered list type (level 2)

$ol-list-style-type--2: lower-alpha !default;

/// Ordered list type (level 3)

$ol-list-style-type--3: lower-roman !default;

/// Whether links use underline, etc

$link-text-decoration: none !default;

/// Print link styles
/// @param {Boolean} $visited Include visited style
/// @param {Boolean} $active Include active style

@mixin link($visited: false, $active: false) {
  color: color.get("link");
  text-decoration: $link-text-decoration;
  &:hover {
    color: color.get("link:hover");
  }
  @if ($visited) {
    &:visited {
      color: color.get("link:visited");
    }
  }
  @if ($active) {
    &:active {
      color: color.get("link:active");
    }
  }
}